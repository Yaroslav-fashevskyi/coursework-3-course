import json
import os
import uuid
import time
from natsort import natsorted

class VideoLesson:
    def __init__(self, title, description, author, duration, category, lesson_id=None):
        # –Ø–∫—â–æ ID –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ, –≥–µ–Ω–µ—Ä—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π UUID
        self.id = lesson_id if lesson_id is not None else str(uuid.uuid4())
        self.title = title
        self.description = description
        self.author = author
        self.duration = duration  # —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å —É —Ö–≤–∏–ª–∏–Ω–∞—Ö
        self.category = category

    def to_dict(self):
        return {
            'id': self.id,
            'title': self.title,
            'description': self.description,
            'author': self.author,
            'duration': self.duration,
            'category': self.category
        }

    @classmethod
    def from_dict(cls, data):
        return cls(
            data['title'],
            data['description'],
            data['author'],
            data['duration'],
            data['category'],
            lesson_id=data.get('id')
        )

    def __str__(self):
        return f"üÜî ID: {self.id} | üìö –ù–∞–∑–≤–∞: {self.title} (üìÇ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è: {self.category}) ‚úçÔ∏è –ê–≤—Ç–æ—Ä: {self.author}, ‚è± –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {self.duration} —Ö–≤. \n üìù –û–ø–∏—Å: {self.description}"


class Catalog:
    def __init__(self, filename="catalog.json"):
        self.filename = filename
        self.lessons = []
        self.load_from_file()

    def find_lesson_index(self, lesson_id):
        for index, lesson in enumerate(self.lessons):
            if lesson.id == lesson_id:
                return index
        return -1

    def add_lesson(self, lesson):
        self.lessons.append(lesson)
        self.save_to_file()

    def edit_lesson(self, lesson_id, title=None, description=None, author=None, duration=None, category=None):
        index = self.find_lesson_index(lesson_id)
        if index != -1:
            lesson = self.lessons[index]
            if title is not None and title.strip() != "":
                lesson.title = title
            if description is not None and description.strip() != "":
                lesson.description = description
            if author is not None and author.strip() != "":
                lesson.author = author
            if duration is not None:
                lesson.duration = duration
            if category is not None and category.strip() != "":
                lesson.category = category
            self.save_to_file()
        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID —É—Ä–æ–∫—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è.")

    def delete_lesson(self, lesson_id):
        index = self.find_lesson_index(lesson_id)
        if index != -1:
            del self.lessons[index]
            self.save_to_file()
        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID —É—Ä–æ–∫—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è.")

    def filter_lessons(self, category=None, author=None):
        filtered = self.lessons
        if category:
            filtered = [lesson for lesson in filtered if lesson.category.lower() == category.lower()]
        if author:
            filtered = [lesson for lesson in filtered if lesson.author.lower() == author.lower()]
        return filtered

    def sort_lessons(self):
        print("–í–∏–±–µ—Ä—ñ—Ç—å –∫—Ä–∏—Ç–µ—Ä—ñ–π —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:")
        print("1. –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å")
        print("2. –ù–∞–∑–≤–∞")
        print("3. –ê–≤—Ç–æ—Ä")
        choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫—Ä–∏—Ç–µ—Ä—ñ—é: ")

        if choice == '1':
            print("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—é:")
            print("1. –í—ñ–¥ –º–µ–Ω—à–æ–≥–æ –¥–æ –±—ñ–ª—å—à–æ–≥–æ")
            print("2. –í—ñ–¥ –±—ñ–ª—å—à–æ–≥–æ –¥–æ –º–µ–Ω—à–æ–≥–æ")
            order_choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—Ä—è–¥–∫—É: ")
            reverse = order_choice == '2'
            self.lessons.sort(key=lambda lesson: lesson.duration, reverse=reverse)
            print("–£—Ä–æ–∫–∏ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—é.")
        elif choice == '2':
            print("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –Ω–∞–∑–≤–æ—é:")
            print("1. –ó–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º (–≤—ñ–¥ A –¥–æ Z)")
            print("2. –ó–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç—ñ (–≤—ñ–¥ Z –¥–æ A)")
            order_choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—Ä—è–¥–∫—É: ")
            reverse = order_choice == '2'
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ natsort –¥–ª—è –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –Ω–∞–∑–≤
            self.lessons = natsorted(self.lessons, key=lambda lesson: lesson.title, reverse=reverse)
            print("–£—Ä–æ–∫–∏ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑–∞ –Ω–∞–∑–≤–æ—é.")
        elif choice == '3':
            print("–û–±–µ—Ä—ñ—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∑–∞ –∞–≤—Ç–æ—Ä–æ–º:")
            print("1. –ó–∞ –∞–ª—Ñ–∞–≤—ñ—Ç–æ–º")
            print("2. –ó–∞ –∑–≤–æ—Ä–æ—Ç–Ω–æ–º—É –∞–ª—Ñ–∞–≤—ñ—Ç—ñ")
            order_choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–æ—Ä—è–¥–∫—É: ")
            reverse = order_choice == '2'
            self.lessons = natsorted(self.lessons, key=lambda lesson: lesson.author, reverse=reverse)
            print("–£—Ä–æ–∫–∏ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ –∑–∞ –∞–≤—Ç–æ—Ä–æ–º.")
        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä –∫—Ä–∏—Ç–µ—Ä—ñ—é —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è.")
            return

        self.save_to_file()

    def display_lessons(self):
        if not self.lessons:
            print("–ö–∞—Ç–∞–ª–æ–≥ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
        for lesson in self.lessons:
            print(lesson)

    def load_from_file(self):
        if os.path.exists(self.filename):
            try:
                with open(self.filename, "r", encoding="utf-8") as f:
                    data = json.load(f)
                    self.lessons = [VideoLesson.from_dict(item) for item in data]
            except Exception as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É: {e}")
                self.lessons = []
        else:
            self.lessons = []

    def save_to_file(self):
        try:
            with open(self.filename, "w", encoding="utf-8") as f:
                json.dump([lesson.to_dict() for lesson in self.lessons],
                          f, ensure_ascii=False, indent=4)
        except Exception as e:
            print(f"–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É: {e}")


class Playlist:
    def __init__(self, name):
        self.name = name
        self.lessons = []

    def find_lesson_index(self, lesson_id):
        for index, lesson in enumerate(self.lessons):
            if lesson.id == lesson_id:
                return index
        return -1

    def add_to_playlist(self, lesson):
        self.lessons.append(lesson)

    def remove_from_playlist(self, lesson_id):
        index = self.find_lesson_index(lesson_id)
        if index != -1:
            del self.lessons[index]
        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID —É—Ä–æ–∫—É –≤ –ø–ª–µ–π–ª–∏—Å—Ç—ñ.")

    def display_playlist(self):
        print(f"–ü–ª–µ–π–ª–∏—Å—Ç: {self.name}")
        if not self.lessons:
            print("–í –ø–ª–µ–π–ª–∏—Å—Ç—ñ –Ω—ñ—á–æ–≥–æ –Ω–µ–º–∞—î.")
        for lesson in self.lessons:
            print(lesson)


def main():
    catalog = Catalog()  # –î–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –∑ —Ñ–∞–π–ª—É "catalog.json"
    # –¢–µ—Å—Ç–æ–≤–µ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —É—Ä–æ–∫—ñ–≤, —è–∫—â–æ —Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π
    if not catalog.lessons:
        catalog.add_lesson(VideoLesson("Python Basics", "–í—Å—Ç—É–ø –¥–æ Python", "Alice", 45, "–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è"))
        catalog.add_lesson(VideoLesson("OOP in Python", "–ö–ª–∞—Å–∏ —Ç–∞ –æ–±'—î–∫—Ç–∏", "Bob", 60, "–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è"))
        catalog.add_lesson(VideoLesson("Advanced Python", "–ì–ª–∏–±–æ–∫–µ –∑–∞–Ω—É—Ä–µ–Ω–Ω—è", "Charlie", 90, "–ü—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è"))

    while True:
        print("\n--- –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ---")
        print("1. –ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ç–∞–ª–æ–≥ —É—Ä–æ–∫—ñ–≤")
        print("2. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —É—Ä–æ–∫")
        print("3. –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —É—Ä–æ–∫")
        print("4. –í–∏–¥–∞–ª–∏—Ç–∏ —É—Ä–æ–∫")
        print("5. –§—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ —É—Ä–æ–∫–∏")
        print("6. –°–æ—Ä—Ç—É–≤–∞—Ç–∏ —É—Ä–æ–∫–∏")
        print("7. –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –ø–ª–µ–π–ª–∏—Å—Ç")
        print("8. –í–∏–π—Ç–∏")
        choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –≤–∏–±—Ä–∞–Ω–æ—ó –¥—ñ—ó: ")

        if choice == '1':
            catalog.display_lessons()

        elif choice == '2':
            title = input("–ù–∞–∑–≤–∞ —É—Ä–æ–∫—É: ")
            description = input("–û–ø–∏—Å —É—Ä–æ–∫—É: ")
            author = input("–ê–≤—Ç–æ—Ä —É—Ä–æ–∫—É: ")
            try:
                duration = int(input("–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (–≤ —Ö–≤–∏–ª–∏–Ω–∞—Ö): "))
            except ValueError:
                duration = 0
            category = input("–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —É—Ä–æ–∫—É: ")
            catalog.add_lesson(VideoLesson(title, description, author, duration, category))

        elif choice == '3':
            lesson_id = input("–í–≤–µ–¥—ñ—Ç—å ID —É—Ä–æ–∫—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: ")
            title = input("–ù–æ–≤–∞ –Ω–∞–∑–≤–∞ (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è): ")
            description = input("–ù–æ–≤–∏–π –æ–ø–∏—Å (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è): ")
            author = input("–ù–æ–≤–∏–π –∞–≤—Ç–æ—Ä (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è): ")
            duration_input = input("–ù–æ–≤–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è): ")
            category = input("–ù–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º, —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è): ")
            duration = None
            if duration_input.strip() != "":
                try:
                    duration = int(duration_input)
                except ValueError:
                    duration = None
            catalog.edit_lesson(lesson_id,
                                title=title if title.strip() != "" else None,
                                description=description if description.strip() != "" else None,
                                author=author if author.strip() != "" else None,
                                duration=duration,
                                category=category if category.strip() != "" else None)

        elif choice == '4':
            lesson_id = input("–í–≤–µ–¥—ñ—Ç—å ID —É—Ä–æ–∫—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ")
            catalog.delete_lesson(lesson_id)

        elif choice == '5':
            category = input("–í–≤–µ–¥—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É): ")
            author = input("–í–≤–µ–¥—ñ—Ç—å –∞–≤—Ç–æ—Ä–∞ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó (–∑–∞–ª–∏—à—Ç–µ –ø–æ—Ä–æ–∂–Ω—ñ–º –¥–ª—è –ø—Ä–æ–ø—É—Å–∫—É): ")
            filtered = catalog.filter_lessons(category=category if category.strip() != "" else None,
                                              author=author if author.strip() != "" else None)
            if not filtered:
                print("–ó–∞ –∑–∞–¥–∞–Ω–∏–º–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ —É—Ä–æ–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ.")
            else:
                for lesson in filtered:
                    print(lesson)

        elif choice == '6':
            catalog.sort_lessons()
            print("\n–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ —É—Ä–æ–∫—ñ–≤:")
            catalog.display_lessons()

        elif choice == '7':
            playlist_name = input("–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –ø–ª–µ–π–ª–∏—Å—Ç–∞: ")
            playlist = Playlist(playlist_name)
            while True:
                print("\n--- –ú–µ–Ω—é –ø–ª–µ–π–ª–∏—Å—Ç–∞ ---")
                print("1. –î–æ–¥–∞—Ç–∏ —É—Ä–æ–∫ –¥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞")
                print("2. –í–∏–¥–∞–ª–∏—Ç–∏ —É—Ä–æ–∫ –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞")
                print("3. –ü–æ–∫–∞–∑–∞—Ç–∏ –ø–ª–µ–π–ª–∏—Å—Ç")
                print("4. –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
                p_choice = input("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥—ñ—ó: ")

                if p_choice == '1':
                    catalog.display_lessons()
                    lesson_id = input("–í–≤–µ–¥—ñ—Ç—å ID —É—Ä–æ–∫—É –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ –ø–ª–µ–π–ª–∏—Å—Ç–∞: ")
                    index = catalog.find_lesson_index(lesson_id)
                    if index != -1:
                        playlist.add_to_playlist(catalog.lessons[index])
                    else:
                        print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID —É—Ä–æ–∫—É.")
                elif p_choice == '2':
                    playlist.display_playlist()
                    lesson_id = input("–í–≤–µ–¥—ñ—Ç—å ID —É—Ä–æ–∫—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞: ")
                    playlist.remove_from_playlist(lesson_id)
                elif p_choice == '3':
                    playlist.display_playlist()
                elif p_choice == '4':
                    break
                else:
                    print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä.")

        elif choice == '8':
            print("–í–∏—Ö—ñ–¥ –∑ –ø—Ä–æ–≥—Ä–∞–º–∏.")
            break

        else:
            print("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")


if __name__ == "__main__":
    main()
